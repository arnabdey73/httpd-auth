# Dynamically generated by Chef on i-dbdeb540
# Any modifications will be overwritten by Chef.


# Simple configuration for caching only application assets
/author
  {  
  # hostname globbing for farm selection (virtual domain addressing)
  /clientheaders
    {
    "destination"
    "depth"
    "lock-token"
    "overwrite"
    "dav"
    "if"
    "referer"
    "user-agent"
    "authorization"
    "from"
    "content-type"
    "content-length"
    "accept-charset"
    "accept-encoding"
    "accept-language"
    "accept"
    "host"
    "if-match"
    "if-none-match"
    "if-range"
    "if-unmodified-since"
    "max-forwards"
    "proxy-authorization"
    "proxy-connection"
    "range"
    "cookie"
    "cq-action"
    "cq-handle"
    "handle"
    "action"
    "cqstats"
    "x-http-method-override"
    "x-requested-with"
    "CSRF-Token"
    "csrf-token"
    }
  /virtualhosts
    {
    # entries will be compared against the 'host' request header.
    # example: www.company.com
    # example: intranet.*
    "stage-auth.zebra.ctmsp.com"
    }
  # the load will be balanced among these render instances
  /renders
    {
    /rend01 { /hostname "localhost" /port "4502" }
    }
  # only handle the requests in the following acl. default is 'none'
  # the glob pattern is matched against the first request line
  /filter
    {
    /0000 { /type "allow" /glob "*"                                            } # Allow all requests to be processed
    /0001 { /type "deny"  /glob "* /system/*"                                  } # Deny external access to system console
    /0002 { /type "allow" /glob "* /system/sling/logout.html*"                 } # Allow logout
    /0003 { /type "deny"  /glob "* /crx*"                                      } # Deny external access to CRX web application
    /0004 { /type "deny"  /glob "* /admin/*"                                   } # Deny external access to servlet engine console
    /0005 { /type "deny"  /glob "* /libs/granite/security/content/admin.html*" } # Deny Admin access in CQ 5.5
    /0006 { /type "allow" /glob "/maintenance/maintenance.html"                }
    }

  # enable session management
  /sessionmanagement
    {
    /directory "/tmp/author.sessions"
    }

  # deny propagation of replication posts
  /propagateSyndPost "0"

  # the cache is used to store requests from the renders for faster delivery
  # for a second time.
  /cache
    {
    # the cacheroot must be equal to the document root of the webserver
    /docroot "/var/www/cache/author"

    # the statfile is used for 'remembering' the last activation
    /statfileslevel  "0"

    # do not cache authorized data, use session management
    /allowAuthorized "0"

    # the rules define, which pages should be cached. please note that
    # - only GET requests are cached
    # - only requests with an extension are cached
    # - only requests without query parameters ( ? ) are cached
    # - only unauthorized pages are cached unless allowUnauthorized is set to 1
    /rules
      {
      /0000 { /type "deny" /glob "*"                                  } # Deny all caching, give exceptions
      /0001 { /type "allow" /glob "/libs/*"                           } # Cache ADEP software iamges, icons, etc.
      /0002 { /type "deny" /glob "/libs/cq/core/content/welcome.html" } # Do not cache welcome splash page
      }

    # the invalidate section defines those pages which are 'invalidated' after
    # any activation. please note that, the activated page itself and all 
    # related documents are flushed on an modification. for example: if the 
    # page /foo/bar is activated, all /foo/bar.* files are removed from the
    # cache.
    /invalidate
      {
      /0000 { /type "deny" /glob "*"                                  }
      /0001 { /type "allow" /glob "*.html"                            }
      }
    }
  # the statistics define, who the load should be balanced among the renders
  # according to the media-type. 
  /statistics
    {
    /categories
      {
      /html { /glob "*.html" }
      /others { /glob "*" }
      }
    }
  }
